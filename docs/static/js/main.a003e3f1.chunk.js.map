{"version":3,"sources":["lighting/Lighting.js","player/PlayerMovement.js","player/PlayerControls.js","player/PlayerCamera.js","player/Player.js","player/hud/Stats.js","terrain/ground/textures/grass.jpg","terrain/ground/Ground.js","terrain/foliage/Tree01.js","terrain/examples/Village01.js","terrain/Terrain.js","App.js","index.js"],"names":["Lighting","d","Sky","distance","sunPosition","inclination","azimuth","skyColor","groundColor","intensity","position","shadow-camera-left","shadow-camera-bottom","shadow-camera-right","shadow-camera-top","shadow-camera-near","shadow-camera-far","castShadow","PlayerMovement","forwardRef","props","ref","STATS","api","velocity","useRef","jumpCoolDown","direction","THREE","frontVector","sideVector","camEuler","useState","forward","backward","left","right","jump","run","movement","setMovement","keys","KeyW","KeyS","KeyA","KeyD","Space","ShiftLeft","moveFieldByKey","key","useEffect","handleKeyDown","e","m","code","handleKeyUp","document","addEventListener","removeEventListener","usePlayerControls","calculateVelocity","set","FinalSpeed","speed","pan_speed","run_speed","subVectors","normalize","multiplyScalar","applyEuler","camera","rotation","current","inertia","v","x","z","jump_height","subscribe","useFrame","PlayerCamera","pos","y","player_height","moveCamera","PointerLockControls","Player","useSphere","mass","type","useThree","Stats","showPanel","className","parent","StatsImpl","stats","node","body","appendChild","dom","classList","add","begin","addEffect","end","addAfterEffect","removeChild","usePlane","Math","PI","args","texture","useLoader","Grass","wrapS","wrapT","repeat","attach","map","useGLTF","preload","Ground","App","shadowMap","gl","alpha","fov","gravity","Terrain","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a003e3f1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Sky } from '@react-three/drei'\r\n\r\nexport const Lighting = () => {\r\n  const d = 8.25\r\n  return (\r\n    <>\r\n      <Sky\r\n        distance={450000}\r\n        sunPosition={[1, 1, 0]}\r\n        inclination={0}\r\n        azimuth={0.25}\r\n      />\r\n      <hemisphereLight\r\n        skyColor={'black'}\r\n        groundColor={0xffffff}\r\n        intensity={0.5}\r\n        position={[0, 50, 0]}\r\n      />\r\n      <directionalLight\r\n        position={[-8, 20, 8]}\r\n        shadow-camera-left={d * -1}\r\n        shadow-camera-bottom={d * -1}\r\n        shadow-camera-right={d}\r\n        shadow-camera-top={d}\r\n        shadow-camera-near={0.1}\r\n        shadow-camera-far={1500}\r\n        castShadow\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nimport * as THREE from 'three'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nimport { usePlayerControls } from './PlayerControls'\r\nimport { forwardRef } from 'react'\r\n\r\nexport const PlayerMovement = forwardRef((props, ref) => {\r\n  const STATS = props.STATS\r\n  const api = props.api\r\n\r\n  const velocity = useRef([0, 0, 0])\r\n  const position = useRef([0, 0, 0])\r\n\r\n  //no continuous jumping\r\n  const jumpCoolDown = useRef()\r\n\r\n  const direction = new THREE.Vector3()\r\n  const frontVector = new THREE.Vector3()\r\n  const sideVector = new THREE.Vector3()\r\n\r\n  const camEuler = new THREE.Euler()\r\n\r\n  const { forward, backward, left, right, jump, run } = usePlayerControls()\r\n\r\n  const playerOnGround = () => {\r\n    return position.current[1] < 1\r\n  }\r\n\r\n  const applyFriction = () => {\r\n    velocity.current[0] -= velocity.current[0] / STATS.inertia\r\n    velocity.current[2] -= velocity.current[2] / STATS.inertia\r\n  }\r\n\r\n  const calculateVelocity = () => {\r\n    frontVector.set(0, 0, backward - forward)\r\n    sideVector.set(left - right, 0, 0)\r\n    camEuler.set(0, 0, 0)\r\n\r\n    let FinalSpeed = STATS.speed\r\n\r\n    if (left || right) {\r\n      FinalSpeed = STATS.pan_speed()\r\n    } else if (run) {\r\n      FinalSpeed = STATS.run_speed()\r\n    }\r\n\r\n    direction\r\n      .subVectors(frontVector, sideVector)\r\n      .normalize()\r\n      .multiplyScalar(FinalSpeed)\r\n      .applyEuler(props.camera.rotation)\r\n\r\n    applyFriction()\r\n\r\n    const v = [\r\n      velocity.current[0] + direction.x / STATS.inertia,\r\n      velocity.current[1],\r\n      velocity.current[2] + direction.z / STATS.inertia,\r\n    ]\r\n\r\n    if (playerOnGround()) {\r\n      api.velocity.set(v[0], v[1], v[2])\r\n\r\n      if (!jump) jumpCoolDown.current = false\r\n      if (jump && !jumpCoolDown.current) {\r\n        jumpCoolDown.current = true\r\n        api.velocity.set(v[0], STATS.jump_height(), v[2])\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    api.velocity.subscribe(v => (velocity.current = v))\r\n    api.position.subscribe(v => (position.current = v))\r\n  }, [])\r\n\r\n  useFrame(() => {\r\n    calculateVelocity()\r\n  })\r\n\r\n  return null\r\n})\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const usePlayerControls = () => {\r\n  const [movement, setMovement] = useState({\r\n    forward: false,\r\n    backward: false,\r\n    left: false,\r\n    right: false,\r\n    jump: false,\r\n    run: false,\r\n  })\r\n\r\n  const keys = {\r\n    KeyW: 'forward',\r\n    KeyS: 'backward',\r\n    KeyA: 'left',\r\n    KeyD: 'right',\r\n    Space: 'jump',\r\n    ShiftLeft: 'run',\r\n  }\r\n\r\n  const moveFieldByKey = key => keys[key]\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = e =>\r\n      setMovement(m => ({ ...m, [moveFieldByKey(e.code)]: true }))\r\n\r\n    const handleKeyUp = e =>\r\n      setMovement(m => ({ ...m, [moveFieldByKey(e.code)]: false }))\r\n\r\n    document.addEventListener('keydown', handleKeyDown)\r\n    document.addEventListener('keyup', handleKeyUp)\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown)\r\n      document.removeEventListener('keyup', handleKeyUp)\r\n    }\r\n  }, [])\r\n  return movement\r\n}\r\n","import React from 'react'\r\n\r\nimport { PointerLockControls } from '@react-three/drei'\r\nimport { forwardRef } from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nexport const PlayerCamera = forwardRef((props, ref) => {\r\n  function moveCamera() {\r\n    const pos = ref.current.position\r\n\r\n    props.camera.position.y = pos.y + props.STATS.player_height\r\n\r\n    props.camera.position.x = pos.x\r\n\r\n    props.camera.position.z = pos.z\r\n  }\r\n\r\n  useFrame(() => {\r\n    moveCamera()\r\n  })\r\n\r\n  return <PointerLockControls/>\r\n})\r\n","import React from 'react'\r\nimport { useThree } from 'react-three-fiber'\r\n\r\nimport { useSphere } from 'use-cannon'\r\n\r\nimport { PlayerMovement } from './PlayerMovement'\r\nimport { PlayerCamera } from './PlayerCamera'\r\n\r\nexport default function Player(props) {\r\n  const STATS = {\r\n    speed: 7,\r\n    player_height: 2.5,\r\n    run_speed: () => STATS.speed * 2,\r\n    pan_speed: () => STATS.speed * 0.6,\r\n    jump_height: () => STATS.player_height * 3,\r\n    inertia: 5,\r\n  }\r\n\r\n  const [ref, api] = useSphere(() => ({\r\n    mass: 1,\r\n    type: 'Dynamic',\r\n    position: [0, STATS.player_height, 0],\r\n    ...props,\r\n  }))\r\n\r\n  const { camera } = useThree()\r\n\r\n  return (\r\n    <group>\r\n      <PlayerCamera ref={ref} STATS={STATS} camera={camera} />\r\n      <PlayerMovement ref={ref} api={api} STATS={STATS} camera={camera} />\r\n      <mesh ref={ref}></mesh>\r\n    </group>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { addEffect, addAfterEffect } from \"react-three-fiber\"\r\n// @ts-ignore\r\nimport StatsImpl from \"stats.js\"\r\n\r\nexport function Stats({ showPanel = 0, className, parent }) {\r\n  const [stats] = useState(() => new StatsImpl())\r\n  useEffect(() => {\r\n    const node = (parent && parent.current) || document.body\r\n\r\n    stats.showPanel(showPanel)\r\n    node.appendChild(stats.dom)\r\n\r\n    if (className) stats.dom.classList.add(className)\r\n\r\n    const begin = addEffect(() => stats.begin())\r\n    const end = addAfterEffect(() => stats.end())\r\n\r\n    return () => {\r\n      node.removeChild(stats.dom)\r\n      begin()\r\n      end()\r\n    }\r\n  }, [parent])\r\n  return null\r\n}\r\n","export default __webpack_public_path__ + \"static/media/grass.000eb687.jpg\";","import * as THREE from 'three'\r\nimport React from 'react'\r\n\r\nimport { useLoader } from 'react-three-fiber'\r\nimport { usePlane } from 'use-cannon'\r\nimport Grass from './textures/grass.jpg'\r\n\r\n// import Height from './heightMaps/height.png'\r\n// import Normal from './heightMaps/normal.png'\r\n// import Color from './heightMaps/color.png'\r\n\r\nexport default props => {\r\n  const mapWidth = 100,\r\n    mapLength = 100\r\n  const vX = 16\r\n\r\n  // const H = useLoader(THREE.TextureLoader, Height)\r\n  // const N = useLoader(THREE.TextureLoader, Normal)\r\n  // const C = useLoader(THREE.TextureLoader, Color)\r\n\r\n  const [ref] = usePlane(() => ({\r\n    position: [0, 0, 0],\r\n    rotation: [-Math.PI / 2, 0, 0],\r\n    args: [mapWidth, mapLength, vX, vX],\r\n  }))\r\n\r\n  // geometry={H}\r\n  /* <planeBufferGeometry args={[mapWidth, mapLength, vX, vX]} />\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n        normalMap={N}\r\n        displacementMap={H}\r\n        map={C}\r\n        color=\"white\"\r\n      /> */\r\n  // color=\"#42523d\"\r\n\r\n  const texture = useLoader(THREE.TextureLoader, Grass)\r\n  texture.wrapS = texture.wrapT = THREE.RepeatWrapping\r\n  texture.repeat.set(mapWidth, mapLength)\r\n\r\n  return (\r\n    <mesh ref={ref}>\r\n      <planeBufferGeometry attach=\"geometry\" args={[mapWidth, mapLength]} />\r\n      <meshStandardMaterial attach=\"material\" map={texture} />\r\n    </mesh>\r\n  )\r\n}\r\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nauthor: myochii (https://sketchfab.com/myochii)\nlicense: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\nsource: https://sketchfab.com/3d-models/pine-tree-28db2fc0596348448f648e37cd13eb93\ntitle: pine tree\n*/\n\nimport React, { useRef, Suspense } from 'react'\nimport { useGLTF } from '@react-three/drei/useGLTF'\n\nexport default function Tree01(props) {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('/models/trees/tree01/scene.gltf')\n  return (\n    <Suspense fallback={null}>\n    <group ref={group} {...props} dispose={null}>\n      <group rotation={[-Math.PI / 2, 0, 0]}>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <group position={[0, 0.66, 0]}>\n            <mesh\n              material={materials.lambert1}\n              geometry={nodes.group3_pasted__group1_pasted__pasted__pCone1_lambert1_0.geometry}\n            />\n          </group>\n          <group position={[-0.7, 0.06, 0.11]} scale={[6.76, 6.76, 6.76]}>\n            <mesh material={materials.lambert2} geometry={nodes.pPlane1_lambert2_0.geometry} />\n          </group>\n          <group position={[-0.84, 0.37, 0.18]} scale={[0.7, 0.7, 0.7]}>\n            <mesh material={materials.lambert3} geometry={nodes.pCube3_lambert3_0.geometry} />\n          </group>\n        </group>\n      </group>\n    </group>\n    </Suspense>\n  )\n}\n\nuseGLTF.preload('/models/trees/tree01/scene.gltf')\n","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\nauthor: EdwinRC (https://sketchfab.com/Edwin3D)\r\nlicense: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\r\nsource: https://sketchfab.com/3d-models/low-poly-winter-scene-2ffe1ed449414cc184078dd1e2882284\r\ntitle: Low Poly Winter Scene\r\n*/\r\n\r\nimport React, { useRef } from 'react'\r\nimport { useGLTF } from '@react-three/drei/useGLTF'\r\n\r\nexport default function Village01(props) {\r\n  const group = useRef()\r\n  const { nodes, materials } = useGLTF('/models/examples/village/scene.gltf')\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n      <group rotation={[-Math.PI / 2, 0, 0]}>\r\n        <group\r\n          position={[-1.01, -8.85, 4.34]}\r\n          rotation={[0, 0, -3]}\r\n          scale={[0.19, 0.19, 0.11]}\r\n        >\r\n          <mesh\r\n            material={materials.Main}\r\n            geometry={nodes.Cylinder008_0.geometry}\r\n          />\r\n        </group>\r\n        <group\r\n          position={[-0.07, -0.92, 0.86]}\r\n          rotation={[-Math.PI / 2, 0, 0]}\r\n          scale={[0, 0.01, 0.01]}\r\n        >\r\n          <mesh material={materials.Main} geometry={nodes.Cube035_0.geometry} />\r\n        </group>\r\n        <group\r\n          position={[4.24, 2.89, -0.03]}\r\n          rotation={[Math.PI / 2, 0, 0]}\r\n          scale={[0.71, 0.71, 0.71]}\r\n        >\r\n          <mesh\r\n            material={materials.Main}\r\n            geometry={nodes.Cylinder_Cylinder009_0.geometry}\r\n          />\r\n        </group>\r\n        <group scale={[8.88, 8.88, 8.88]}>\r\n          <mesh\r\n            material={materials.Main}\r\n            geometry={nodes.Plane001_0.geometry}\r\n          />\r\n        </group>\r\n        <group\r\n          position={[-1.01, -8.7, 4.22]}\r\n          rotation={[0, 0, -Math.PI / 2]}\r\n          scale={[0.04, 0.04, 0.04]}\r\n        >\r\n          <mesh\r\n            material={materials.Main}\r\n            geometry={nodes.Cylinder000_0.geometry}\r\n          />\r\n        </group>\r\n        <group\r\n          position={[3.22, 5.42, 2.05]}\r\n          rotation={[0, 0, -1.92]}\r\n          scale={[0.12, 0.12, 0.42]}\r\n        >\r\n          <mesh\r\n            material={materials.Main}\r\n            geometry={nodes.Plane009_0.geometry}\r\n          />\r\n        </group>\r\n        <group position={[-7.58, -0.4, 0.88]} scale={[0.22, 0.22, 0.22]}>\r\n          <mesh\r\n            material={materials.Main}\r\n            geometry={nodes.Cylinder_0.geometry}\r\n          />\r\n        </group>\r\n        <group\r\n          position={[7.51, -3.06, 2.28]}\r\n          rotation={[Math.PI / 2, Math.PI / 2, 0]}\r\n          scale={[0.33, 0.11, 0.11]}\r\n        >\r\n          <mesh material={materials.Main} geometry={nodes.Plane_0.geometry} />\r\n        </group>\r\n        <group\r\n          position={[-7.05, -3.33, 4.41]}\r\n          rotation={[0, 0, -Math.PI / 2]}\r\n          scale={[0.02, 0.02, 0.02]}\r\n        >\r\n          <mesh\r\n            material={materials.Main}\r\n            geometry={nodes.Cylinder002_0.geometry}\r\n          />\r\n        </group>\r\n        <group\r\n          position={[6.7, -3.33, 4.41]}\r\n          rotation={[0, 0, -Math.PI / 2]}\r\n          scale={[0.02, 0.02, 0.02]}\r\n        >\r\n          <mesh\r\n            material={materials.Main}\r\n            geometry={nodes.Cylinder001_0.geometry}\r\n          />\r\n        </group>\r\n        <group\r\n          position={[-5.24, -2.92, -0.03]}\r\n          rotation={[Math.PI / 2, -Math.PI / 2, 0]}\r\n          scale={[0.11, 0.11, 0.03]}\r\n        >\r\n          <mesh\r\n            material={materials.Main}\r\n            geometry={nodes.Cylinder003_0.geometry}\r\n          />\r\n        </group>\r\n        <group\r\n          position={[-6.46, -3.33, 2.14]}\r\n          rotation={[Math.PI / 2, Math.PI / 2, 0]}\r\n          scale={[0.25, 0.31, 0.31]}\r\n        >\r\n          <mesh\r\n            material={materials.Main}\r\n            geometry={nodes.Plane012_0.geometry}\r\n          />\r\n        </group>\r\n        <group position={[4.96, 8.1, 0.51]} scale={[0.89, 0.01, 0.07]}>\r\n          <mesh material={materials.Main} geometry={nodes.Cube005_0.geometry} />\r\n        </group>\r\n        <group\r\n          position={[-1.34, 1, 2.38]}\r\n          rotation={[0, 0, 0]}\r\n          scale={[0.01, 0.01, 0.42]}\r\n        >\r\n          <mesh material={materials.Main} geometry={nodes.Cube_0.geometry} />\r\n        </group>\r\n        <group\r\n          position={[6.63, 1.33, 0.15]}\r\n          rotation={[0, 0, -Math.PI / 2]}\r\n          scale={[0.31, 0.31, 0.31]}\r\n        >\r\n          <mesh\r\n            material={materials.Main}\r\n            geometry={nodes.Plane002_0.geometry}\r\n          />\r\n        </group>\r\n      </group>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('/models/examples/village/scene.gltf')\r\n","import React from 'react'\r\n\r\nimport Ground from './ground/Ground'\r\nimport Tree01 from './foliage/Tree01'\r\nimport Village01 from './examples/Village01'\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      {/* <Village01 position={[0, 1, 0]} /> */}\r\n      {/* <Tree01 position={[20, 0, 20]} /> */}\r\n      <Ground />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Canvas } from 'react-three-fiber'\r\nimport { Physics } from 'use-cannon'\r\n\r\nimport { Lighting } from './lighting/Lighting'\r\nimport Player from './player/Player'\r\nimport { Stats } from './player/hud/Stats'\r\nimport Terrain from './terrain/Terrain'\r\n\r\nexport default function App() {\r\n  return (\r\n    <Canvas shadowMap gl={{ alpha: false }} camera={{ fov: 50 }}>\r\n      <Lighting />\r\n      <Stats />\r\n      <Physics gravity={[0, -10, 0]}>\r\n        <Player />\r\n        <Terrain />\r\n      </Physics>\r\n    </Canvas>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './App.css'\r\nimport App from './App'\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}