{"version":3,"sources":["lighting/Lighting.js","player/PlayerMovement.js","player/PlayerCamera.js","player/tools/FlashLight.js","player/Player.js","player/PlayerControls.js","player/hud/Stats.js","terrain/ground/textures/dirt.png","terrain/functions/Math.js","terrain/ground/textures/grass_blades.png","terrain/ground/Grass.js","terrain/ground/Ground.js","terrain/foliage/Tree03.js","terrain/foliage/Forest.js","terrain/objects/Fence01.js","terrain/objects/BoundaryFence.js","terrain/Terrain.js","App.js","index.js"],"names":["Lighting","props","day","Sky","distance","sunPosition","inclination","azimuth","position","intensity","shadow-camera-left","d","shadow-camera-bottom","shadow-camera-right","shadow-camera-top","shadow-camera-near","shadow-camera-far","color","castShadow","skyColor","groundColor","Stars","radius","depth","count","factor","saturation","fade","PlayerMovement","forwardRef","ref","STATS","api","C","forward","backward","left","right","jump","run","velocity","crouch","useRef","jumpCoolDown","direction","THREE","frontVector","sideVector","camEuler","calculateVelocity","set","FinalSpeed","speed","pan_speed","run_speed","subVectors","normalize","multiplyScalar","applyEuler","camera","rotation","current","inertia","v","x","z","jump_height","useEffect","subscribe","useFrame","PlayerCamera","pos","y","player_height","moveCamera","PointerLockControls","FlashLight","light","useMemo","allowToggle","onOff","toggle_light","angle","moveLight","cwd","getWorldDirection","add","target","setRotationFromQuaternion","quaternion","moveTarget","object","penumbra","Player","useSphere","mass","type","size","useThree","useState","movement","setMovement","keys","KeyW","KeyS","KeyA","KeyD","Space","ShiftLeft","KeyC","KeyF","moveFieldByKey","key","handleKeyDown","e","m","code","handleKeyUp","document","addEventListener","removeEventListener","usePlayerControls","c","Stats","showPanel","className","parent","StatsImpl","stats","node","body","appendChild","dom","classList","begin","addEffect","end","addAfterEffect","removeChild","perlin","rand_vect","theta","Math","random","PI","cos","sin","dot_prod_grid","vx","vy","g_vect","d_vect","this","gradients","smootherstep","interp","a","b","seed","memory","get","hasOwnProperty","xf","floor","yf","tl","tr","bl","br","xt","xb","Grass","pow","cX","positions","Array","map","transform","useLayoutEffect","index","setPosition","setMatrixAt","grassBaseGeometry","positionAttribute","attributes","i","getX","getY","getZ","setXYZ","texture","useLoader","grass","args","side","alphaTest","transparent","opacity","GrassPatch","fallback","mapWidth","mapLength","vX","usePlane","Dirt","wrapS","wrapT","repeat","receiveShadow","attach","Tree03","visibleHitBox","useBox","useGLTF","nodes","materials","scale","dispose","material","Mat_pine_tree_bark_lambert3","geometry","tree_Mat_pine_tree_bark_lambert3_0","dead","Mat_pine_tree_branch_lambert2","group47_Mat_pine_tree_branch_lambert2_0","Forest","clumpDiameter","midDiameter","minDist","maxDist","minScale","maxScale","midPos","j","round","dX","sX","active","treeList","push","randomTreeGrid","Fence01","lambert1","pCylinder10_lambert1_0","pCylinder11_lambert1_0","pCylinder6_lambert1_0","pCylinder15_lambert1_0","pCylinder12_lambert1_0","pCylinder13_lambert1_0","pCylinder8_lambert1_0","pCylinder9_lambert1_0","pCylinder5_lambert1_0","preload","wall","pX","fenceWidth","fenceCount","wallArr","temp","BoundaryFence","X","Y","Terrain","Ground","App","console","warn","shadowMap","gl","alpha","fov","gravity","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.04ed3f5a.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\nimport { Sky, Stars } from '@react-three/drei'\r\n\r\nexport const Lighting = (props) => {\r\n  const d = 20\r\n  return (\r\n    <>\r\n      {props.day? (\r\n        <>\r\n          <Sky\r\n            distance={450000}\r\n            sunPosition={[1, 1, 0]}\r\n            inclination={0}\r\n            azimuth={0.25}\r\n          />\r\n          <directionalLight\r\n            position={[0, 10, 20]}\r\n            intensity={1}\r\n            shadow-camera-left={d * -1}\r\n            shadow-camera-bottom={d * -1}\r\n            shadow-camera-right={d}\r\n            shadow-camera-top={d}\r\n            shadow-camera-near={0.1}\r\n            shadow-camera-far={1500}\r\n            color=\"white\"\r\n            castShadow\r\n          />\r\n          <hemisphereLight\r\n            skyColor={'black'}\r\n            groundColor={0xffffff}\r\n            intensity={1}\r\n            position={[0, 50, 0]}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Stars\r\n            radius={100} // Radius of the inner sphere (default=100)\r\n            depth={50} // Depth of area where stars should fit (default=50)\r\n            count={5000} // Amount of stars (default=5000)\r\n            factor={4} // Size factor (default=4)\r\n            saturation={0} // Saturation 0-1 (default=0)\r\n            fade // Faded dots (default=false)\r\n          />\r\n          <hemisphereLight\r\n            skyColor={'black'}\r\n            groundColor={0xffffff}\r\n            intensity={.03}\r\n            position={[0, 50, 0]}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nimport * as THREE from 'three'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nimport { forwardRef } from 'react'\r\n\r\nexport const PlayerMovement = forwardRef((props, ref) => {\r\n  const STATS = props.STATS\r\n  const api = props.api\r\n  const {forward, backward, left, right, jump, run, crouch} = props.C\r\n\r\n  const velocity = useRef([0, 0, 0])\r\n  const position = useRef([0, 0, 0])\r\n\r\n  //no continuous jumping\r\n  const jumpCoolDown = useRef()\r\n\r\n  const direction = new THREE.Vector3()\r\n  const frontVector = new THREE.Vector3()\r\n  const sideVector = new THREE.Vector3()\r\n\r\n  const camEuler = new THREE.Euler()\r\n\r\n  const playerOnGround = () => {\r\n    return position.current[1] < 1\r\n  }\r\n\r\n  const applyFriction = () => {\r\n    velocity.current[0] -= velocity.current[0] / STATS.inertia\r\n    velocity.current[2] -= velocity.current[2] / STATS.inertia\r\n  }\r\n\r\n  const calculateVelocity = () => {\r\n    frontVector.set(0, 0, backward - forward)\r\n    sideVector.set(left - right, 0, 0)\r\n    camEuler.set(0, 0, 0)\r\n\r\n    let FinalSpeed = STATS.speed\r\n\r\n    if (left || right) {\r\n      FinalSpeed = STATS.pan_speed()\r\n    } else if (run) {\r\n      FinalSpeed = STATS.run_speed()\r\n    }\r\n\r\n    direction\r\n      .subVectors(frontVector, sideVector)\r\n      .normalize()\r\n      .multiplyScalar(FinalSpeed)\r\n      .applyEuler(props.camera.rotation)\r\n\r\n    applyFriction()\r\n\r\n    const v = [\r\n      velocity.current[0] + direction.x / STATS.inertia,\r\n      velocity.current[1],\r\n      velocity.current[2] + direction.z / STATS.inertia,\r\n    ]\r\n\r\n    if (playerOnGround()) {\r\n      api.velocity.set(v[0], v[1], v[2])\r\n\r\n      if (!jump) jumpCoolDown.current = false\r\n      if (jump && !jumpCoolDown.current) {\r\n        jumpCoolDown.current = true\r\n        api.velocity.set(v[0], STATS.jump_height(), v[2])\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    api.velocity.subscribe(v => (velocity.current = v))\r\n    api.position.subscribe(v => (position.current = v))\r\n  }, [])\r\n\r\n  useFrame(() => {\r\n    calculateVelocity()\r\n  })\r\n\r\n  return null\r\n})\r\n","import React from 'react'\r\n\r\nimport { PointerLockControls } from '@react-three/drei'\r\nimport { forwardRef } from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nexport const PlayerCamera = forwardRef((props, ref) => {\r\n  function moveCamera() {\r\n    const pos = ref.current.position\r\n\r\n    props.camera.position.y = pos.y + props.STATS.player_height\r\n\r\n    props.camera.position.x = pos.x\r\n\r\n    props.camera.position.z = pos.z\r\n  }\r\n\r\n  useFrame(() => {\r\n    moveCamera()\r\n  })\r\n\r\n  return <PointerLockControls/>\r\n})\r\n","import React, { forwardRef, useMemo } from 'react'\r\nimport { useRef } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useFrame, useThree } from 'react-three-fiber'\r\nimport * as THREE from 'three'\r\n\r\nexport const FlashLight = forwardRef((props, ref) => {\r\n  const light = useMemo(() => new THREE.SpotLight('#f6d980'), [])\r\n  const allowToggle = useRef(true)\r\n  const onOff = useRef(true)\r\n\r\n  const { toggle_light } = props.C\r\n\r\n  light.angle = 0.4\r\n  light.intensity = onOff.current ? 2 : 0\r\n  light.castShadow = true\r\n\r\n  function moveLight() {\r\n    const pos = ref.current.position\r\n\r\n    light.position.y = pos.y + props.STATS.player_height\r\n\r\n    light.position.x = pos.x\r\n\r\n    light.position.z = pos.z\r\n  }\r\n\r\n  function moveTarget() {\r\n    var dist = 2\r\n    var cwd = new THREE.Vector3()\r\n\r\n    props.camera.getWorldDirection(cwd)\r\n\r\n    cwd.multiplyScalar(dist)\r\n    cwd.add(props.camera.position)\r\n\r\n    light.target.position.set(cwd.x, cwd.y, cwd.z)\r\n    light.target.setRotationFromQuaternion(props.camera.quaternion)\r\n  }\r\n  useFrame(() => {\r\n    if (!toggle_light) allowToggle.current = true\r\n    if (toggle_light && allowToggle.current) {\r\n      allowToggle.current = false\r\n      onOff.current = !onOff.current\r\n    }\r\n\r\n    moveLight()\r\n    moveTarget()\r\n  })\r\n  return (\r\n    <>\r\n      <primitive object={light} penumbra/>\r\n      <primitive object={light.target} position={[0, 2, 0]} />\r\n    </>\r\n  )\r\n})\r\n","import React, { forwardRef } from 'react'\r\nimport { useThree } from 'react-three-fiber'\r\n\r\nimport { useSphere } from 'use-cannon'\r\n\r\nimport { PlayerMovement } from './PlayerMovement'\r\nimport { PlayerCamera } from './PlayerCamera'\r\nimport { PlayerModel } from './PlayerModel'\r\nimport { usePlayerControls } from './PlayerControls'\r\n\r\nimport { FlashLight } from './tools/FlashLight'\r\n\r\nexport default function Player(props) {\r\n  const STATS = {\r\n    speed: 5,\r\n    player_height: 2.5,\r\n    run_speed: () => STATS.speed * 2,\r\n    pan_speed: () => STATS.speed * 0.6,\r\n    jump_height: () => STATS.player_height * 3,\r\n    inertia: 5,\r\n  }\r\n\r\n  // Player hitbox\r\n  const [ref, api] = useSphere(() => ({\r\n    mass: 1,\r\n    type: 'Dynamic',\r\n    position: [0, STATS.player_height, 0],\r\n    size: [1, 32, 32],\r\n    ...props,\r\n  }))\r\n\r\n  const { camera } = useThree()\r\n  const {\r\n    forward,\r\n    backward,\r\n    left,\r\n    right,\r\n    jump,\r\n    run,\r\n    crouch,\r\n    toggle_light,\r\n  } = usePlayerControls()\r\n\r\n  return (\r\n    <group>\r\n      <PlayerCamera ref={ref} STATS={STATS} camera={camera} c={{ crouch }} />\r\n      <FlashLight\r\n        ref={ref}\r\n        STATS={STATS}\r\n        camera={camera}\r\n        C={{ toggle_light }}\r\n      />\r\n      <PlayerMovement\r\n        ref={ref}\r\n        api={api}\r\n        STATS={STATS}\r\n        camera={camera}\r\n        C={{ forward, backward, left, right, jump, run, crouch }}\r\n      />\r\n      {/* <PlayerModel ref={ref} /> */}\r\n    </group>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const usePlayerControls = () => {\r\n  const [movement, setMovement] = useState({\r\n    forward: false,\r\n    backward: false,\r\n    left: false,\r\n    right: false,\r\n    jump: false,\r\n    run: false,\r\n    crouch: false,\r\n    toggle_light: false,\r\n  })\r\n\r\n  const keys = {\r\n    KeyW: 'forward',\r\n    KeyS: 'backward',\r\n    KeyA: 'left',\r\n    KeyD: 'right',\r\n    Space: 'jump',\r\n    ShiftLeft: 'run',\r\n    KeyC: 'crouch',\r\n    KeyF: 'toggle_light',\r\n  }\r\n\r\n  const moveFieldByKey = key => keys[key]\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = e =>\r\n      setMovement(m => ({ ...m, [moveFieldByKey(e.code)]: true }))\r\n\r\n    const handleKeyUp = e =>\r\n      setMovement(m => ({ ...m, [moveFieldByKey(e.code)]: false }))\r\n\r\n    document.addEventListener('keydown', handleKeyDown)\r\n    document.addEventListener('keyup', handleKeyUp)\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown)\r\n      document.removeEventListener('keyup', handleKeyUp)\r\n    }\r\n  }, [])\r\n  return movement\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { addEffect, addAfterEffect } from \"react-three-fiber\"\r\n// @ts-ignore\r\nimport StatsImpl from \"stats.js\"\r\n\r\nexport function Stats({ showPanel = 0, className, parent }) {\r\n  const [stats] = useState(() => new StatsImpl())\r\n  useEffect(() => {\r\n    const node = (parent && parent.current) || document.body\r\n\r\n    stats.showPanel(showPanel)\r\n    node.appendChild(stats.dom)\r\n\r\n    if (className) stats.dom.classList.add(className)\r\n\r\n    const begin = addEffect(() => stats.begin())\r\n    const end = addAfterEffect(() => stats.end())\r\n\r\n    return () => {\r\n      node.removeChild(stats.dom)\r\n      begin()\r\n      end()\r\n    }\r\n  }, [parent])\r\n  return null\r\n}\r\n","export default __webpack_public_path__ + \"static/media/dirt.c82951bd.png\";","export const math = (function () {\r\n  return {\r\n    rand_range: function (a, b) {\r\n      return Math.random() * (b - a) + a\r\n    },\r\n\r\n    rand_normalish: function () {\r\n      const r = Math.random() + Math.random() + Math.random() + Math.random()\r\n      return (r / 4.0) * 2.0 - 1\r\n    },\r\n\r\n    rand_int: function (a, b) {\r\n      return Math.round(Math.random() * (b - a) + a)\r\n    },\r\n\r\n    lerp: function (x, a, b) {\r\n      return x * (b - a) + a\r\n    },\r\n\r\n    smoothstep: function (x, a, b) {\r\n      x = x * x * (3.0 - 2.0 * x)\r\n      return x * (b - a) + a\r\n    },\r\n\r\n    smootherstep: function (x, a, b) {\r\n      x = x * x * x * (x * (x * 6 - 15) + 10)\r\n      return x * (b - a) + a\r\n    },\r\n\r\n    clamp: function (x, a, b) {\r\n      return Math.min(Math.max(x, a), b)\r\n    },\r\n\r\n    sat: function (x) {\r\n      return Math.min(Math.max(x, 0.0), 1.0)\r\n    },\r\n\r\n    in_range: (x, a, b) => {\r\n      return x >= a && x <= b\r\n    },\r\n  }\r\n})()\r\n\r\nexport let perlin = {\r\n  rand_vect: function () {\r\n    let theta = Math.random() * 2 * Math.PI\r\n    return { x: Math.cos(theta), y: Math.sin(theta) }\r\n  },\r\n  dot_prod_grid: function (x, y, vx, vy) {\r\n    let g_vect\r\n    let d_vect = { x: x - vx, y: y - vy }\r\n    if (this.gradients[[vx, vy]]) {\r\n      g_vect = this.gradients[[vx, vy]]\r\n    } else {\r\n      g_vect = this.rand_vect()\r\n      this.gradients[[vx, vy]] = g_vect\r\n    }\r\n    return d_vect.x * g_vect.x + d_vect.y * g_vect.y\r\n  },\r\n  smootherstep: function (x) {\r\n    return 6 * x ** 5 - 15 * x ** 4 + 10 * x ** 3\r\n  },\r\n  interp: function (x, a, b) {\r\n    return a + this.smootherstep(x) * (b - a)\r\n  },\r\n  seed: function () {\r\n    this.gradients = {}\r\n  },\r\n  memory: {},\r\n  get: function (x, y) {\r\n    if (this.memory.hasOwnProperty([x, y])) return this.memory[[x, y]]\r\n    let xf = Math.floor(x)\r\n    let yf = Math.floor(y)\r\n    //interpolate\r\n    let tl = this.dot_prod_grid(x, y, xf, yf)\r\n    let tr = this.dot_prod_grid(x, y, xf + 1, yf)\r\n    let bl = this.dot_prod_grid(x, y, xf, yf + 1)\r\n    let br = this.dot_prod_grid(x, y, xf + 1, yf + 1)\r\n    let xt = this.interp(x - xf, tl, tr)\r\n    let xb = this.interp(x - xf, bl, br)\r\n    let v = this.interp(y - yf, xt, xb)\r\n    this.memory[[x, y]] = v\r\n    return v\r\n  },\r\n}\r\nperlin.seed()\r\n","export default __webpack_public_path__ + \"static/media/grass_blades.ab29baee.png\";","import React, { useRef, useLayoutEffect, useMemo, Suspense } from 'react'\r\nimport { perlin } from '../functions/Math'\r\nimport * as THREE from 'three'\r\nimport grass from './textures/grass_blades.png'\r\nimport { useLoader } from 'react-three-fiber'\r\n// import { useFrame } from 'react-three-fiber'\r\n\r\nexport function Grass(props) {\r\n  const ref = useRef()\r\n\r\n  const count = Math.pow(300, 2)\r\n  const cX = Math.pow(count, 1 / 2) / 2\r\n  const sX = 1 // spacing\r\n\r\n  const { positions, transform } = useMemo(() => {\r\n    const positions = [...Array(count)].map(() => new THREE.Vector3())\r\n    const transform = new THREE.Matrix4()\r\n    return { positions, transform }\r\n  }, [])\r\n\r\n  useLayoutEffect(() => {\r\n    let index = 0\r\n    let y = 0\r\n    for (let x = -cX; x < cX; x++) {\r\n      for (let z = -cX; z < cX; z++) {\r\n        y = 1 * perlin.get(0.2 * x, 0.2 * z)\r\n        positions[index].set(\r\n          x * sX + Math.random() * sX,\r\n          y,\r\n          z * sX + Math.random() * sX\r\n        )\r\n        transform.setPosition(positions[index])\r\n        ref.current.setMatrixAt(index, transform)\r\n        index++\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const grassBaseGeometry = new THREE.PlaneBufferGeometry(2, 2)\r\n  const positionAttribute = grassBaseGeometry.attributes.position\r\n\r\n  for (let i = 0; i < positionAttribute.count; i++) {\r\n    let x = positionAttribute.getX(i)\r\n    let y = positionAttribute.getY(i)\r\n    let z = positionAttribute.getZ(i)\r\n\r\n    // z += Math.random() * 0.1\r\n\r\n    positionAttribute.setXYZ(i, x, y, z)\r\n  }\r\n\r\n  const texture = useLoader(THREE.TextureLoader, grass)\r\n\r\n  return (\r\n    <group {...props}>\r\n      <instancedMesh args={[grassBaseGeometry, null, count]} ref={ref}>\r\n        <meshLambertMaterial\r\n          side={THREE.DoubleSide}\r\n          alphaTest={0.5}\r\n          transparent\r\n          opacity={1}\r\n          map={texture}\r\n        />\r\n      </instancedMesh>\r\n    </group>\r\n  )\r\n}\r\n\r\nexport function GrassPatch(props) {\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <group {...props}>\r\n        <Grass rotation={[0, (Math.PI * 1) / 4, 0]} />\r\n        <Grass rotation={[0, (Math.PI * 2) / 4, 0]} />\r\n        <Grass rotation={[0, (Math.PI * 3) / 4, 0]} />\r\n        <Grass rotation={[0, (Math.PI * 4) / 4, 0]} />\r\n      </group>\r\n    </Suspense>\r\n  )\r\n}\r\n","import * as THREE from 'three'\r\nimport React from 'react'\r\n\r\nimport { useLoader } from 'react-three-fiber'\r\nimport { usePlane } from 'use-cannon'\r\nimport Dirt from './textures/dirt.png'\r\nimport { GrassPatch } from './Grass'\r\n\r\nexport default props => {\r\n  const mapWidth = 1000,\r\n    mapLength = 1000\r\n  const vX = 500\r\n\r\n  const [ref] = usePlane(() => ({\r\n    position: [0, 0, 0],\r\n    rotation: [-Math.PI / 2, 0, 0],\r\n    args: [mapWidth, mapLength, vX, vX],\r\n  }))\r\n\r\n  const texture = useLoader(THREE.TextureLoader, Dirt)\r\n  texture.wrapS = texture.wrapT = THREE.RepeatWrapping\r\n  texture.repeat.set(mapWidth / 4, mapLength / 4)\r\n\r\n  return (\r\n    <>\r\n      <GrassPatch position={[0, 1, 0]} />\r\n      <mesh ref={ref} receiveShadow>\r\n        <planeBufferGeometry\r\n          attach=\"geometry\"\r\n          args={[mapWidth, mapLength, vX, vX]}\r\n        />\r\n        <meshStandardMaterial attach=\"material\" map={texture} />\r\n      </mesh>\r\n    </>\r\n  )\r\n}\r\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nauthor: grimren13 (https://sketchfab.com/grimren13)\nlicense: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)\nsource: https://sketchfab.com/models/ed72511b36c14446a1b596b7e3686d73\ntitle: Pine Tree Single 01\n*/\n\nimport React, { useRef, Suspense } from 'react'\nimport { useGLTF } from '@react-three/drei/useGLTF'\nimport { useBox } from 'use-cannon'\n\nexport function Tree03(props) {\n  const visibleHitBox = useRef(false)\n\n  const [ref] = useBox(() => ({\n    mass: 0,\n    args: [1.5, 20, 1.5],\n    ...props,\n  }))\n\n  const { nodes, materials } = useGLTF(\n    '/three-fps/models/trees/tree03/scene.gltf'\n  )\n  return (\n    <mesh ref={ref} scale={props.scale} dispose={null}>\n      {visibleHitBox.current ? (\n        <>\n          <boxBufferGeometry\n            attach=\"geometry\"\n            args={[\n              1.5 / props.scale[0],\n              20 / props.scale[1],\n              1.5 / props.scale[2],\n            ]}\n          />\n          <meshLambertMaterial color=\"red\" opacity={0.7} transparent />\n        </>\n      ) : null}\n\n      <Suspense fallback={null}>\n        <group dispose={null}>\n          <group rotation={[-Math.PI / 2, 0, 0]}>\n            <group rotation={[Math.PI / 2, 0, 0]}>\n              <mesh\n                material={materials.Mat_pine_tree_bark_lambert3}\n                geometry={nodes.tree_Mat_pine_tree_bark_lambert3_0.geometry}\n                alphaTest={0.5}\n              />\n              {props.dead ? null : (\n                <mesh\n                  material={materials.Mat_pine_tree_branch_lambert2}\n                  geometry={\n                    nodes.group47_Mat_pine_tree_branch_lambert2_0.geometry\n                  }\n                  alphaTest={0.5}\n                />\n              )}\n            </group>\n          </group>\n        </group>\n      </Suspense>\n    </mesh>\n  )\n}\n\nuseGLTF.preload('/three-fps/models/trees/tree03/scene.gltf')\n","import React from 'react'\r\nimport { Tree03 } from './Tree03'\r\n\r\nexport function randomTreeGrid(\r\n  clumpDiameter,\r\n  midDiameter,\r\n  minDist,\r\n  maxDist,\r\n  minScale,\r\n  maxScale\r\n) {\r\n  const midPos = Math.floor(clumpDiameter / 2)\r\n\r\n  let map = []\r\n  for (let i = 1; i < clumpDiameter - 1; i++) {\r\n    map[i] = []\r\n    for (let j = 1; j < clumpDiameter - 1; j++) {\r\n      const active = Math.round(Math.random()) * 1\r\n      let x = i - midPos,\r\n        y = j - midPos\r\n      if (\r\n        (active && (x > midDiameter / 2 || x < midDiameter / -2)) ||\r\n        y > midDiameter / 2 ||\r\n        y < midDiameter / -2\r\n      ) {\r\n        const dX = Math.random() * maxDist + minDist\r\n        const sX = Math.random() * maxScale + minScale\r\n        const dead = Math.round(Math.random() * 15 + 1) < 3\r\n\r\n\r\n        map[i][j] = {\r\n          active: 1,\r\n          scale: [sX, sX, sX],\r\n          position: [x * dX, 0, y * dX],\r\n          dead: dead,\r\n        }\r\n      } else {\r\n        map[i][j] = {}\r\n      }\r\n    }\r\n  }\r\n\r\n  let treeList = []\r\n\r\n  for (let i = 1; i < clumpDiameter - 1; i++) {\r\n    for (let j = 1; j < clumpDiameter - 1; j++) {\r\n      if (map[i][j]['active']) {\r\n        treeList.push(\r\n          <>\r\n            {/* <Grass02\r\n              position={map[i][j]['position']}\r\n              scale={[0.05, 0.05, 0.05]}\r\n            /> */}\r\n            <Tree03\r\n              key={`${i}${j}`}\r\n              position={map[i][j]['position']}\r\n              scale={map[i][j]['scale']}\r\n              dead={map[i][j]['dead']}\r\n            />\r\n          </>\r\n        )\r\n      }\r\n    }\r\n  }\r\n  return treeList\r\n}\r\n\r\nexport function Forest() {\r\n  return randomTreeGrid(15, 1, 10, 15, 0.01, 0.05)\r\n}\r\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nauthor: Caboose3d (https://sketchfab.com/caboosereynolds)\nlicense: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\nsource: https://sketchfab.com/3d-models/country-side-fence-8585e102c6104a6d90e823de83e73bbc\ntitle: Country Side Fence\n*/\n\nimport React, { Suspense, useRef } from 'react'\nimport { useGLTF } from '@react-three/drei/useGLTF'\nimport { useBox } from 'use-cannon'\n\nexport function Fence01(props) {\n  const visibleHitBox = useRef(false)\n\n  const [ref] = useBox(() => ({\n    mass: 0,\n    args: [12, 10, 1],\n    ...props,\n  }))\n\n  const { nodes, materials } = useGLTF(\n    '/three-fps/models/objects/fence01/scene.gltf'\n  )\n  return (\n    <mesh ref={ref} scale={props.scale} dispose={null}>\n      {visibleHitBox.current ? (\n        <>\n          <boxBufferGeometry\n            attach=\"geometry\"\n            args={[\n              12 / props.scale[0],\n              10 / props.scale[1],\n              1 / props.scale[2],\n            ]}\n          />\n          <meshLambertMaterial color=\"red\" opacity={0.7} transparent />\n        </>\n      ) : null}\n      <Suspense fallback={null}>\n        <group rotation={[-Math.PI / 2, 0, 0]}>\n          <group rotation={[Math.PI / 2, 0, 0]}>\n            <mesh\n              material={materials.lambert1}\n              geometry={nodes.pCylinder10_lambert1_0.geometry}\n            />\n            <mesh\n              material={materials.lambert1}\n              geometry={nodes.pCylinder11_lambert1_0.geometry}\n            />\n            <mesh\n              material={materials.lambert1}\n              geometry={nodes.pCylinder6_lambert1_0.geometry}\n            />\n            <mesh\n              material={materials.lambert1}\n              geometry={nodes.pCylinder15_lambert1_0.geometry}\n            />\n            <mesh\n              material={materials.lambert1}\n              geometry={nodes.pCylinder12_lambert1_0.geometry}\n            />\n            <mesh\n              material={materials.lambert1}\n              geometry={nodes.pCylinder13_lambert1_0.geometry}\n            />\n            <mesh\n              material={materials.lambert1}\n              geometry={nodes.pCylinder8_lambert1_0.geometry}\n            />\n            <mesh\n              material={materials.lambert1}\n              geometry={nodes.pCylinder9_lambert1_0.geometry}\n            />\n            <mesh\n              material={materials.lambert1}\n              geometry={nodes.pCylinder5_lambert1_0.geometry}\n            />\n            {/* <mesh\n              material={materials.lambert1}\n              geometry={nodes.pCylinder14_lambert1_0.geometry}\n            /> */}\n          </group>\n        </group>\n      </Suspense>\n    </mesh>\n  )\n}\n\nuseGLTF.preload('/three-fps/models/objects/fence01/scene.gltf')\n","import React from 'react'\r\nimport { Fence01 } from './Fence01'\r\n\r\nconst wall = (rotation, pX, fenceWidth, fenceCount) => {\r\n  const wallArr = []\r\n  for (let index = 0; index < fenceCount; index++) {\r\n    let x = rotation ? fenceWidth / 2 : fenceWidth\r\n    let y = rotation ? fenceWidth / 2 + fenceWidth * index : fenceWidth * index\r\n    let temp\r\n\r\n    if (rotation) {\r\n      temp = x\r\n      x = y\r\n      y = temp\r\n    }\r\n\r\n    wallArr.push(\r\n      <Fence01\r\n        scale={[0.5, 0.5, 0.5]}\r\n        position={[pX[0] + x, pX[1], pX[2] + y]}\r\n        rotation={[0, !rotation ? Math.PI / 2 : 0, 0]}\r\n      />\r\n    )\r\n  }\r\n  return wallArr\r\n}\r\n\r\nexport function BoundaryFence() {\r\n  let sX = 10\r\n\r\n  let X = -(sX/2) * 12\r\n  let Y = X - 12\r\n  let nX = Y + 12 * sX\r\n  \r\n  return (\r\n    <group>\r\n      <group>{wall(true, [X, 0, Y], 12, sX)}</group>\r\n      <group>{wall(false, [Y, 0, X], 12, sX)}</group>\r\n      <group>{wall(true, [X, 0, nX], 12, sX)}</group>\r\n      <group>{wall(false, [nX, 0, X], 12, sX)}</group>\r\n    </group>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Ground from './ground/Ground'\r\nimport { Forest } from './foliage/Forest'\r\nimport { BoundaryFence } from './objects/BoundaryFence'\r\n\r\nexport default function Terrain() {\r\n  return (\r\n    <group>\r\n      <Forest />\r\n      <BoundaryFence />\r\n      <Ground />\r\n    </group>\r\n  )\r\n}\r\n","import React, { useRef } from 'react'\r\n\r\nimport { Canvas } from 'react-three-fiber'\r\nimport { Physics } from 'use-cannon'\r\n\r\nimport { Lighting } from './lighting/Lighting'\r\nimport Player from './player/Player'\r\nimport { Stats } from './player/hud/Stats'\r\nimport Terrain from './terrain/Terrain'\r\n\r\nexport default function App() {\r\n  console.warn = () => {} //remove warnings\r\n  const day = true\r\n\r\n  return (\r\n    <Canvas shadowMap gl={{ alpha: false }} camera={{ fov: 60 }}>\r\n      <Lighting day={day} />\r\n      {day? null : <fog attach=\"fog\" args={['black', 10, 100]} />}\r\n      <Stats />\r\n      <Physics gravity={[0, -10, 0]}>\r\n        <Player />\r\n        <Terrain />\r\n      </Physics>\r\n    </Canvas>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './App.css'\r\nimport App from './App'\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}