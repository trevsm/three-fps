[{"C:\\Users\\Dev\\Desktop\\three-fps\\src\\index.js":"1","C:\\Users\\Dev\\Desktop\\three-fps\\src\\App.js":"2","C:\\Users\\Dev\\Desktop\\three-fps\\src\\lighting\\Lighting.js":"3","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\hud\\Stats.js":"4","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\Player.js":"5","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\ground\\Ground.js":"6","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerControls.js":"7","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Tree01.js":"8","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\Terrain.js":"9","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\examples\\Village01.js":"10","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerCamera.js":"11","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerMovement.js":"12","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Tree02.js":"13","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerModel.js":"14","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\tools\\FlashLight.js":"15","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Forest.js":"16"},{"size":165,"mtime":1608661244612,"results":"17","hashOfConfig":"18"},{"size":659,"mtime":1608700590250,"results":"19","hashOfConfig":"18"},{"size":1162,"mtime":1608706794818,"results":"20","hashOfConfig":"18"},{"size":709,"mtime":1608661244614,"results":"21","hashOfConfig":"18"},{"size":1080,"mtime":1608706129639,"results":"22","hashOfConfig":"18"},{"size":867,"mtime":1608694035596,"results":"23","hashOfConfig":"18"},{"size":970,"mtime":1608661244613,"results":"24","hashOfConfig":"18"},{"size":1467,"mtime":1608661244615,"results":"25","hashOfConfig":"18"},{"size":228,"mtime":1608697833353,"results":"26","hashOfConfig":"18"},{"size":4682,"mtime":1608661244615,"results":"27","hashOfConfig":"18"},{"size":528,"mtime":1608701445753,"results":"28","hashOfConfig":"18"},{"size":2141,"mtime":1608661244614,"results":"29","hashOfConfig":"18"},{"size":2210,"mtime":1608694185306,"results":"30","hashOfConfig":"18"},{"size":358,"mtime":1608676001266,"results":"31","hashOfConfig":"18"},{"size":1068,"mtime":1608706744226,"results":"32","hashOfConfig":"18"},{"size":1504,"mtime":1608697619075,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1k214t2",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"C:\\Users\\Dev\\Desktop\\three-fps\\src\\index.js",[],["74","75"],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\App.js",[],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\lighting\\Lighting.js",["76"],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\hud\\Stats.js",["77"],"import { useState, useEffect } from \"react\"\r\nimport { addEffect, addAfterEffect } from \"react-three-fiber\"\r\n// @ts-ignore\r\nimport StatsImpl from \"stats.js\"\r\n\r\nexport function Stats({ showPanel = 0, className, parent }) {\r\n  const [stats] = useState(() => new StatsImpl())\r\n  useEffect(() => {\r\n    const node = (parent && parent.current) || document.body\r\n\r\n    stats.showPanel(showPanel)\r\n    node.appendChild(stats.dom)\r\n\r\n    if (className) stats.dom.classList.add(className)\r\n\r\n    const begin = addEffect(() => stats.begin())\r\n    const end = addAfterEffect(() => stats.end())\r\n\r\n    return () => {\r\n      node.removeChild(stats.dom)\r\n      begin()\r\n      end()\r\n    }\r\n  }, [parent])\r\n  return null\r\n}\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\Player.js",["78"],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\ground\\Ground.js",["79"],"import * as THREE from 'three'\r\nimport React from 'react'\r\n\r\nimport { useLoader } from 'react-three-fiber'\r\nimport { usePlane } from 'use-cannon'\r\nimport Grass from './textures/grass.jpg'\r\n\r\nexport default props => {\r\n  const mapWidth = 10000,\r\n    mapLength = 10000\r\n  const vX = 32\r\n\r\n  const [ref] = usePlane(() => ({\r\n    position: [0, 0, 0],\r\n    rotation: [-Math.PI / 2, 0, 0],\r\n    args: [mapWidth, mapLength, vX, vX],\r\n  }))\r\n\r\n  const texture = useLoader(THREE.TextureLoader, Grass)\r\n  texture.wrapS = texture.wrapT = THREE.RepeatWrapping\r\n  texture.repeat.set(mapWidth/2, mapLength/2)\r\n\r\n  return (\r\n    <mesh ref={ref} receiveShadow>\r\n      <planeBufferGeometry\r\n        attach=\"geometry\"\r\n        args={[mapWidth, mapLength, vX, vX]}\r\n      />\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n        map={texture}\r\n      />\r\n    </mesh>\r\n  )\r\n}\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerControls.js",["80"],"import { useState, useEffect } from 'react'\r\n\r\nexport const usePlayerControls = () => {\r\n  const [movement, setMovement] = useState({\r\n    forward: false,\r\n    backward: false,\r\n    left: false,\r\n    right: false,\r\n    jump: false,\r\n    run: false,\r\n  })\r\n\r\n  const keys = {\r\n    KeyW: 'forward',\r\n    KeyS: 'backward',\r\n    KeyA: 'left',\r\n    KeyD: 'right',\r\n    Space: 'jump',\r\n    ShiftLeft: 'run',\r\n  }\r\n\r\n  const moveFieldByKey = key => keys[key]\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = e =>\r\n      setMovement(m => ({ ...m, [moveFieldByKey(e.code)]: true }))\r\n\r\n    const handleKeyUp = e =>\r\n      setMovement(m => ({ ...m, [moveFieldByKey(e.code)]: false }))\r\n\r\n    document.addEventListener('keydown', handleKeyDown)\r\n    document.addEventListener('keyup', handleKeyUp)\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown)\r\n      document.removeEventListener('keyup', handleKeyUp)\r\n    }\r\n  }, [])\r\n  return movement\r\n}\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Tree01.js",[],["81","82"],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\Terrain.js",[],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\examples\\Village01.js",[],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerCamera.js",[],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerMovement.js",["83"],"import { useEffect, useRef } from 'react'\r\n\r\nimport * as THREE from 'three'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nimport { usePlayerControls } from './PlayerControls'\r\nimport { forwardRef } from 'react'\r\n\r\nexport const PlayerMovement = forwardRef((props, ref) => {\r\n  const STATS = props.STATS\r\n  const api = props.api\r\n\r\n  const velocity = useRef([0, 0, 0])\r\n  const position = useRef([0, 0, 0])\r\n\r\n  //no continuous jumping\r\n  const jumpCoolDown = useRef()\r\n\r\n  const direction = new THREE.Vector3()\r\n  const frontVector = new THREE.Vector3()\r\n  const sideVector = new THREE.Vector3()\r\n\r\n  const camEuler = new THREE.Euler()\r\n\r\n  const { forward, backward, left, right, jump, run } = usePlayerControls()\r\n\r\n  const playerOnGround = () => {\r\n    return position.current[1] < 1\r\n  }\r\n\r\n  const applyFriction = () => {\r\n    velocity.current[0] -= velocity.current[0] / STATS.inertia\r\n    velocity.current[2] -= velocity.current[2] / STATS.inertia\r\n  }\r\n\r\n  const calculateVelocity = () => {\r\n    frontVector.set(0, 0, backward - forward)\r\n    sideVector.set(left - right, 0, 0)\r\n    camEuler.set(0, 0, 0)\r\n\r\n    let FinalSpeed = STATS.speed\r\n\r\n    if (left || right) {\r\n      FinalSpeed = STATS.pan_speed()\r\n    } else if (run) {\r\n      FinalSpeed = STATS.run_speed()\r\n    }\r\n\r\n    direction\r\n      .subVectors(frontVector, sideVector)\r\n      .normalize()\r\n      .multiplyScalar(FinalSpeed)\r\n      .applyEuler(props.camera.rotation)\r\n\r\n    applyFriction()\r\n\r\n    const v = [\r\n      velocity.current[0] + direction.x / STATS.inertia,\r\n      velocity.current[1],\r\n      velocity.current[2] + direction.z / STATS.inertia,\r\n    ]\r\n\r\n    if (playerOnGround()) {\r\n      api.velocity.set(v[0], v[1], v[2])\r\n\r\n      if (!jump) jumpCoolDown.current = false\r\n      if (jump && !jumpCoolDown.current) {\r\n        jumpCoolDown.current = true\r\n        api.velocity.set(v[0], STATS.jump_height(), v[2])\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    api.velocity.subscribe(v => (velocity.current = v))\r\n    api.position.subscribe(v => (position.current = v))\r\n  }, [])\r\n\r\n  useFrame(() => {\r\n    calculateVelocity()\r\n  })\r\n\r\n  return null\r\n})\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Tree02.js",[],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerModel.js",["84"],"import React from 'react'\r\n\r\nimport { forwardRef } from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nexport const PlayerModel = forwardRef((props, ref) => {\r\n  return (\r\n    <mesh ref={ref}>\r\n      <sphereBufferGeometry attach=\"geometry\" args={[1, 32, 32]} />\r\n      <meshLambertMaterial attach=\"material\" color='white' />\r\n    </mesh>\r\n  )\r\n})\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\tools\\FlashLight.js",["85","86"],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Forest.js",["87","88"],"import React from 'react'\r\nimport Tree02 from './Tree02'\r\n\r\nexport function randomTreeGrid(\r\n    clumpDiameter,\r\n    midDiameter,\r\n    minDist,\r\n    maxDist,\r\n    minScale,\r\n    maxScale\r\n  ) {\r\n    const midPos = Math.floor(clumpDiameter / 2)\r\n  \r\n    let map = []\r\n    for (let i = 1; i < clumpDiameter - 1; i++) {\r\n      map[i] = []\r\n      for (let j = 1; j < clumpDiameter - 1; j++) {\r\n        const active = Math.round(Math.random()) * 1\r\n        let x = i - midPos,\r\n          y = j - midPos\r\n        if (\r\n          active &&\r\n          (x > midDiameter / 2 || x < midDiameter / -2) ||\r\n          (y > midDiameter / 2 || y < midDiameter / -2)\r\n        ) {\r\n          const dX = Math.random() * maxDist + minDist\r\n          const sX = Math.random() * maxScale + minScale\r\n  \r\n          map[i][j] = {\r\n            active: 1,\r\n            scale: [sX, sX, sX],\r\n            position: [x * dX, 0, y * dX],\r\n          }\r\n        } else {\r\n          map[i][j] = {}\r\n        }\r\n      }\r\n    }\r\n  \r\n    let treeList = []\r\n  \r\n    for (let i = 1; i < clumpDiameter - 1; i++) {\r\n      for (let j = 1; j < clumpDiameter - 1; j++) {\r\n        if (map[i][j]['active']) {\r\n          treeList.push(\r\n            <Tree02\r\n              key={`${i}${j}`}\r\n              position={map[i][j]['position']}\r\n              scale={map[i][j]['scale']}\r\n            />\r\n          )\r\n        }\r\n      }\r\n    }\r\n    return treeList\r\n  }\r\n\r\n  export function Forest(){\r\n      return randomTreeGrid(20, 3, 5, 10, 0.01, 0.03)\r\n  }",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":24,"column":6,"nodeType":"99","endLine":24,"endColumn":14,"suggestions":"100"},{"ruleId":"93","severity":1,"message":"101","line":8,"column":10,"nodeType":"95","messageId":"96","endLine":8,"endColumn":21},{"ruleId":"102","severity":1,"message":"103","line":8,"column":1,"nodeType":"104","endLine":35,"endColumn":2},{"ruleId":"97","severity":1,"message":"105","line":38,"column":6,"nodeType":"99","endLine":38,"endColumn":8,"suggestions":"106"},{"ruleId":"89","replacedBy":"107"},{"ruleId":"91","replacedBy":"108"},{"ruleId":"97","severity":1,"message":"109","line":77,"column":6,"nodeType":"99","endLine":77,"endColumn":8,"suggestions":"110"},{"ruleId":"93","severity":1,"message":"111","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":18},{"ruleId":"93","severity":1,"message":"112","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":19},{"ruleId":"93","severity":1,"message":"113","line":3,"column":20,"nodeType":"95","messageId":"96","endLine":3,"endColumn":28},{"ruleId":"114","severity":1,"message":"115","line":22,"column":18,"nodeType":"116","messageId":"117","endLine":22,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":23,"column":57,"nodeType":"116","messageId":"117","endLine":23,"endColumn":59},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Sky' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'className', 'showPanel', and 'stats'. Either include them or remove the dependency array.","ArrayExpression",["120"],"'PlayerModel' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'moveFieldByKey'. Either include it or remove the dependency array.",["121"],["118"],["119"],"React Hook useEffect has missing dependencies: 'api.position' and 'api.velocity'. Either include them or remove the dependency array.",["122"],"'useFrame' is defined but never used.","'useEffect' is defined but never used.","'useThree' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [className, parent, showPanel, stats]",{"range":"129","text":"130"},"Update the dependencies array to be: [moveFieldByKey]",{"range":"131","text":"132"},"Update the dependencies array to be: [api.position, api.velocity]",{"range":"133","text":"134"},[680,688],"[className, parent, showPanel, stats]",[943,945],"[moveFieldByKey]",[2062,2064],"[api.position, api.velocity]"]