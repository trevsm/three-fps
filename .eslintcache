[{"C:\\Users\\Dev\\Desktop\\three-fps\\src\\index.js":"1","C:\\Users\\Dev\\Desktop\\three-fps\\src\\App.js":"2","C:\\Users\\Dev\\Desktop\\three-fps\\src\\lighting\\Lighting.js":"3","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\hud\\Stats.js":"4","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\Player.js":"5","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\ground\\Ground.js":"6","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerControls.js":"7","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Tree01.js":"8","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\Terrain.js":"9","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\examples\\Village01.js":"10","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerCamera.js":"11","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerMovement.js":"12","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Tree02.js":"13","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerModel.js":"14","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\tools\\FlashLight.js":"15","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Forest.js":"16","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Grass02.js":"17","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\objects\\Fence01.js":"18","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\objects\\BoundaryFence.js":"19","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Tree03.js":"20"},{"size":165,"mtime":1608661244612,"results":"21","hashOfConfig":"22"},{"size":731,"mtime":1608763864671,"results":"23","hashOfConfig":"22"},{"size":1569,"mtime":1608762158574,"results":"24","hashOfConfig":"22"},{"size":709,"mtime":1608661244614,"results":"25","hashOfConfig":"22"},{"size":1482,"mtime":1608716146379,"results":"26","hashOfConfig":"22"},{"size":867,"mtime":1608715364417,"results":"27","hashOfConfig":"22"},{"size":1064,"mtime":1608708598783,"results":"28","hashOfConfig":"22"},{"size":1467,"mtime":1608661244615,"results":"29","hashOfConfig":"22"},{"size":355,"mtime":1608763594575,"results":"30","hashOfConfig":"22"},{"size":4682,"mtime":1608661244615,"results":"31","hashOfConfig":"22"},{"size":528,"mtime":1608701445753,"results":"32","hashOfConfig":"22"},{"size":2079,"mtime":1608716101078,"results":"33","hashOfConfig":"22"},{"size":2242,"mtime":1608751913804,"results":"34","hashOfConfig":"22"},{"size":358,"mtime":1608676001266,"results":"35","hashOfConfig":"22"},{"size":1433,"mtime":1608762369266,"results":"36","hashOfConfig":"22"},{"size":1612,"mtime":1608763724329,"results":"37","hashOfConfig":"22"},{"size":1297,"mtime":1608711208584,"results":"38","hashOfConfig":"22"},{"size":2923,"mtime":1608750081753,"results":"39","hashOfConfig":"22"},{"size":1032,"mtime":1608762558240,"results":"40","hashOfConfig":"22"},{"size":1842,"mtime":1608763838472,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1k214t2",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Dev\\Desktop\\three-fps\\src\\index.js",[],["94","95"],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\App.js",[],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\lighting\\Lighting.js",["96"],"import React, { useRef } from 'react'\r\nimport { Sky, Stars } from '@react-three/drei'\r\n\r\nexport const Lighting = (props) => {\r\n  const d = 20\r\n  return (\r\n    <>\r\n      {props.day.current ? (\r\n        <>\r\n          <Sky\r\n            distance={450000}\r\n            sunPosition={[1, 1, 0]}\r\n            inclination={0}\r\n            azimuth={0.25}\r\n          />\r\n          <directionalLight\r\n            position={[0, 10, 20]}\r\n            intensity={1}\r\n            shadow-camera-left={d * -1}\r\n            shadow-camera-bottom={d * -1}\r\n            shadow-camera-right={d}\r\n            shadow-camera-top={d}\r\n            shadow-camera-near={0.1}\r\n            shadow-camera-far={1500}\r\n            color=\"white\"\r\n            castShadow\r\n          />\r\n          <hemisphereLight\r\n            skyColor={'black'}\r\n            groundColor={0xffffff}\r\n            intensity={1}\r\n            position={[0, 50, 0]}\r\n          />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Stars\r\n            radius={100} // Radius of the inner sphere (default=100)\r\n            depth={50} // Depth of area where stars should fit (default=50)\r\n            count={5000} // Amount of stars (default=5000)\r\n            factor={4} // Size factor (default=4)\r\n            saturation={0} // Saturation 0-1 (default=0)\r\n            fade // Faded dots (default=false)\r\n          />\r\n          <hemisphereLight\r\n            skyColor={'black'}\r\n            groundColor={0xffffff}\r\n            intensity={.09}\r\n            position={[0, 50, 0]}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\hud\\Stats.js",["97"],"import { useState, useEffect } from \"react\"\r\nimport { addEffect, addAfterEffect } from \"react-three-fiber\"\r\n// @ts-ignore\r\nimport StatsImpl from \"stats.js\"\r\n\r\nexport function Stats({ showPanel = 0, className, parent }) {\r\n  const [stats] = useState(() => new StatsImpl())\r\n  useEffect(() => {\r\n    const node = (parent && parent.current) || document.body\r\n\r\n    stats.showPanel(showPanel)\r\n    node.appendChild(stats.dom)\r\n\r\n    if (className) stats.dom.classList.add(className)\r\n\r\n    const begin = addEffect(() => stats.begin())\r\n    const end = addAfterEffect(() => stats.end())\r\n\r\n    return () => {\r\n      node.removeChild(stats.dom)\r\n      begin()\r\n      end()\r\n    }\r\n  }, [parent])\r\n  return null\r\n}\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\Player.js",["98","99"],"import React, { forwardRef } from 'react'\r\nimport { useThree } from 'react-three-fiber'\r\n\r\nimport { useSphere } from 'use-cannon'\r\n\r\nimport { PlayerMovement } from './PlayerMovement'\r\nimport { PlayerCamera } from './PlayerCamera'\r\nimport { PlayerModel } from './PlayerModel'\r\nimport { usePlayerControls } from './PlayerControls'\r\n\r\nimport { FlashLight } from './tools/FlashLight'\r\n\r\nexport default function Player(props) {\r\n  const STATS = {\r\n    speed: 5,\r\n    player_height: 2.5,\r\n    run_speed: () => STATS.speed * 2,\r\n    pan_speed: () => STATS.speed * 0.6,\r\n    jump_height: () => STATS.player_height * 3,\r\n    inertia: 5,\r\n  }\r\n\r\n  // Player hitbox\r\n  const [ref, api] = useSphere(() => ({\r\n    mass: 1,\r\n    type: 'Dynamic',\r\n    position: [0, STATS.player_height, 0],\r\n    size: [1, 32, 32],\r\n    ...props,\r\n  }))\r\n\r\n  const { camera } = useThree()\r\n  const {\r\n    forward,\r\n    backward,\r\n    left,\r\n    right,\r\n    jump,\r\n    run,\r\n    crouch,\r\n    toggle_light,\r\n  } = usePlayerControls()\r\n\r\n  return (\r\n    <group>\r\n      <PlayerCamera ref={ref} STATS={STATS} camera={camera} c={{ crouch }} />\r\n      <FlashLight\r\n        ref={ref}\r\n        STATS={STATS}\r\n        camera={camera}\r\n        C={{ toggle_light }}\r\n      />\r\n      <PlayerMovement\r\n        ref={ref}\r\n        api={api}\r\n        STATS={STATS}\r\n        camera={camera}\r\n        C={{ forward, backward, left, right, jump, run, crouch }}\r\n      />\r\n      {/* <PlayerModel ref={ref} /> */}\r\n    </group>\r\n  )\r\n}\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\ground\\Ground.js",["100"],"import * as THREE from 'three'\r\nimport React from 'react'\r\n\r\nimport { useLoader } from 'react-three-fiber'\r\nimport { usePlane } from 'use-cannon'\r\nimport Grass from './textures/grass.jpg'\r\n\r\nexport default props => {\r\n  const mapWidth = 10000,\r\n    mapLength = 10000\r\n  const vX = 32\r\n\r\n  const [ref] = usePlane(() => ({\r\n    position: [0, 0, 0],\r\n    rotation: [-Math.PI / 2, 0, 0],\r\n    args: [mapWidth, mapLength, vX, vX],\r\n  }))\r\n\r\n  const texture = useLoader(THREE.TextureLoader, Grass)\r\n  texture.wrapS = texture.wrapT = THREE.RepeatWrapping\r\n  texture.repeat.set(mapWidth/2, mapLength/2)\r\n\r\n  return (\r\n    <mesh ref={ref} receiveShadow>\r\n      <planeBufferGeometry\r\n        attach=\"geometry\"\r\n        args={[mapWidth, mapLength, vX, vX]}\r\n      />\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n        map={texture}\r\n      />\r\n    </mesh>\r\n  )\r\n}\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerControls.js",["101"],"import { useState, useEffect } from 'react'\r\n\r\nexport const usePlayerControls = () => {\r\n  const [movement, setMovement] = useState({\r\n    forward: false,\r\n    backward: false,\r\n    left: false,\r\n    right: false,\r\n    jump: false,\r\n    run: false,\r\n    crouch: false,\r\n    toggle_light: false,\r\n  })\r\n\r\n  const keys = {\r\n    KeyW: 'forward',\r\n    KeyS: 'backward',\r\n    KeyA: 'left',\r\n    KeyD: 'right',\r\n    Space: 'jump',\r\n    ShiftLeft: 'run',\r\n    KeyC: 'crouch',\r\n    KeyF: 'toggle_light',\r\n  }\r\n\r\n  const moveFieldByKey = key => keys[key]\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = e =>\r\n      setMovement(m => ({ ...m, [moveFieldByKey(e.code)]: true }))\r\n\r\n    const handleKeyUp = e =>\r\n      setMovement(m => ({ ...m, [moveFieldByKey(e.code)]: false }))\r\n\r\n    document.addEventListener('keydown', handleKeyDown)\r\n    document.addEventListener('keyup', handleKeyUp)\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown)\r\n      document.removeEventListener('keyup', handleKeyUp)\r\n    }\r\n  }, [])\r\n  return movement\r\n}\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Tree01.js",[],["102","103"],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\Terrain.js",["104"],"import React from 'react'\r\nimport Ground from './ground/Ground'\r\nimport { Forest } from './foliage/Forest'\r\nimport { Tree03 } from './foliage/Tree03'\r\nimport { BoundaryFence } from './objects/BoundaryFence'\r\n\r\nexport default function Terrain() {\r\n  return (\r\n    <group>\r\n      <Forest />\r\n      <BoundaryFence />\r\n      <Ground />\r\n    </group>\r\n  )\r\n}\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\examples\\Village01.js",[],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerCamera.js",[],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerMovement.js",["105","106"],"import { useEffect, useRef } from 'react'\r\n\r\nimport * as THREE from 'three'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nimport { forwardRef } from 'react'\r\n\r\nexport const PlayerMovement = forwardRef((props, ref) => {\r\n  const STATS = props.STATS\r\n  const api = props.api\r\n  const {forward, backward, left, right, jump, run, crouch} = props.C\r\n\r\n  const velocity = useRef([0, 0, 0])\r\n  const position = useRef([0, 0, 0])\r\n\r\n  //no continuous jumping\r\n  const jumpCoolDown = useRef()\r\n\r\n  const direction = new THREE.Vector3()\r\n  const frontVector = new THREE.Vector3()\r\n  const sideVector = new THREE.Vector3()\r\n\r\n  const camEuler = new THREE.Euler()\r\n\r\n  const playerOnGround = () => {\r\n    return position.current[1] < 1\r\n  }\r\n\r\n  const applyFriction = () => {\r\n    velocity.current[0] -= velocity.current[0] / STATS.inertia\r\n    velocity.current[2] -= velocity.current[2] / STATS.inertia\r\n  }\r\n\r\n  const calculateVelocity = () => {\r\n    frontVector.set(0, 0, backward - forward)\r\n    sideVector.set(left - right, 0, 0)\r\n    camEuler.set(0, 0, 0)\r\n\r\n    let FinalSpeed = STATS.speed\r\n\r\n    if (left || right) {\r\n      FinalSpeed = STATS.pan_speed()\r\n    } else if (run) {\r\n      FinalSpeed = STATS.run_speed()\r\n    }\r\n\r\n    direction\r\n      .subVectors(frontVector, sideVector)\r\n      .normalize()\r\n      .multiplyScalar(FinalSpeed)\r\n      .applyEuler(props.camera.rotation)\r\n\r\n    applyFriction()\r\n\r\n    const v = [\r\n      velocity.current[0] + direction.x / STATS.inertia,\r\n      velocity.current[1],\r\n      velocity.current[2] + direction.z / STATS.inertia,\r\n    ]\r\n\r\n    if (playerOnGround()) {\r\n      api.velocity.set(v[0], v[1], v[2])\r\n\r\n      if (!jump) jumpCoolDown.current = false\r\n      if (jump && !jumpCoolDown.current) {\r\n        jumpCoolDown.current = true\r\n        api.velocity.set(v[0], STATS.jump_height(), v[2])\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    api.velocity.subscribe(v => (velocity.current = v))\r\n    api.position.subscribe(v => (position.current = v))\r\n  }, [])\r\n\r\n  useFrame(() => {\r\n    calculateVelocity()\r\n  })\r\n\r\n  return null\r\n})\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Tree02.js",[],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\PlayerModel.js",["107"],"import React from 'react'\r\n\r\nimport { forwardRef } from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\n\r\nexport const PlayerModel = forwardRef((props, ref) => {\r\n  return (\r\n    <mesh ref={ref}>\r\n      <sphereBufferGeometry attach=\"geometry\" args={[1, 32, 32]} />\r\n      <meshLambertMaterial attach=\"material\" color='white' />\r\n    </mesh>\r\n  )\r\n})\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\player\\tools\\FlashLight.js",["108","109"],"import React, { forwardRef, useMemo } from 'react'\r\nimport { useRef } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useFrame, useThree } from 'react-three-fiber'\r\nimport * as THREE from 'three'\r\n\r\nexport const FlashLight = forwardRef((props, ref) => {\r\n  const light = useMemo(() => new THREE.SpotLight('#f6d980'), [])\r\n  const allowToggle = useRef(true)\r\n  const onOff = useRef(true)\r\n\r\n  const { toggle_light } = props.C\r\n\r\n  light.angle = 0.4\r\n  light.intensity = onOff.current ? 2 : 0\r\n  light.castShadow = true\r\n\r\n  function moveLight() {\r\n    const pos = ref.current.position\r\n\r\n    light.position.y = pos.y + props.STATS.player_height\r\n\r\n    light.position.x = pos.x\r\n\r\n    light.position.z = pos.z\r\n  }\r\n\r\n  function moveTarget() {\r\n    var dist = 2\r\n    var cwd = new THREE.Vector3()\r\n\r\n    props.camera.getWorldDirection(cwd)\r\n\r\n    cwd.multiplyScalar(dist)\r\n    cwd.add(props.camera.position)\r\n\r\n    light.target.position.set(cwd.x, cwd.y, cwd.z)\r\n    light.target.setRotationFromQuaternion(props.camera.quaternion)\r\n  }\r\n  useFrame(() => {\r\n    if (!toggle_light) allowToggle.current = true\r\n    if (toggle_light && allowToggle.current) {\r\n      allowToggle.current = false\r\n      onOff.current = !onOff.current\r\n    }\r\n\r\n    moveLight()\r\n    moveTarget()\r\n  })\r\n  return (\r\n    <>\r\n      <primitive object={light} penumbra/>\r\n      <primitive object={light.target} position={[0, 2, 0]} />\r\n    </>\r\n  )\r\n})\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Forest.js",["110"],"import React from 'react'\r\nimport { Tree03 } from './Tree03'\r\nimport { Grass02 } from './Grass02'\r\n\r\nexport function randomTreeGrid(\r\n  clumpDiameter,\r\n  midDiameter,\r\n  minDist,\r\n  maxDist,\r\n  minScale,\r\n  maxScale\r\n) {\r\n  const midPos = Math.floor(clumpDiameter / 2)\r\n\r\n  let map = []\r\n  for (let i = 1; i < clumpDiameter - 1; i++) {\r\n    map[i] = []\r\n    for (let j = 1; j < clumpDiameter - 1; j++) {\r\n      const active = Math.round(Math.random()) * 1\r\n      let x = i - midPos,\r\n        y = j - midPos\r\n      if (\r\n        (active && (x > midDiameter / 2 || x < midDiameter / -2)) ||\r\n        y > midDiameter / 2 ||\r\n        y < midDiameter / -2\r\n      ) {\r\n        const dX = Math.random() * maxDist + minDist\r\n        const sX = Math.random() * maxScale + minScale\r\n\r\n        map[i][j] = {\r\n          active: 1,\r\n          scale: [sX, sX, sX],\r\n          position: [x * dX, 0, y * dX],\r\n        }\r\n      } else {\r\n        map[i][j] = {}\r\n      }\r\n    }\r\n  }\r\n\r\n  let treeList = []\r\n\r\n  for (let i = 1; i < clumpDiameter - 1; i++) {\r\n    for (let j = 1; j < clumpDiameter - 1; j++) {\r\n      if (map[i][j]['active']) {\r\n        treeList.push(\r\n          <>\r\n            {/* <Grass02\r\n              position={map[i][j]['position']}\r\n              scale={[0.05, 0.05, 0.05]}\r\n            /> */}\r\n            <Tree03\r\n              key={`${i}${j}`}\r\n              position={map[i][j]['position']}\r\n              scale={map[i][j]['scale']}\r\n            />\r\n          </>\r\n        )\r\n      }\r\n    }\r\n  }\r\n  return treeList\r\n}\r\n\r\nexport function Forest() {\r\n  return randomTreeGrid(20, 1, 10, 20, 0.01, 0.05)\r\n}\r\n","C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Grass02.js",[],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\objects\\Fence01.js",[],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\objects\\BoundaryFence.js",[],"C:\\Users\\Dev\\Desktop\\three-fps\\src\\terrain\\foliage\\Tree03.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":23},{"ruleId":"119","severity":1,"message":"120","line":24,"column":6,"nodeType":"121","endLine":24,"endColumn":14,"suggestions":"122"},{"ruleId":"115","severity":1,"message":"123","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":27},{"ruleId":"115","severity":1,"message":"124","line":8,"column":10,"nodeType":"117","messageId":"118","endLine":8,"endColumn":21},{"ruleId":"125","severity":1,"message":"126","line":8,"column":1,"nodeType":"127","endLine":35,"endColumn":2},{"ruleId":"119","severity":1,"message":"128","line":42,"column":6,"nodeType":"121","endLine":42,"endColumn":8,"suggestions":"129"},{"ruleId":"111","replacedBy":"130"},{"ruleId":"113","replacedBy":"131"},{"ruleId":"115","severity":1,"message":"132","line":4,"column":10,"nodeType":"117","messageId":"118","endLine":4,"endColumn":16},{"ruleId":"115","severity":1,"message":"133","line":11,"column":53,"nodeType":"117","messageId":"118","endLine":11,"endColumn":59},{"ruleId":"119","severity":1,"message":"134","line":75,"column":6,"nodeType":"121","endLine":75,"endColumn":8,"suggestions":"135"},{"ruleId":"115","severity":1,"message":"136","line":4,"column":10,"nodeType":"117","messageId":"118","endLine":4,"endColumn":18},{"ruleId":"115","severity":1,"message":"137","line":3,"column":10,"nodeType":"117","messageId":"118","endLine":3,"endColumn":19},{"ruleId":"115","severity":1,"message":"138","line":4,"column":20,"nodeType":"117","messageId":"118","endLine":4,"endColumn":28},{"ruleId":"115","severity":1,"message":"139","line":3,"column":10,"nodeType":"117","messageId":"118","endLine":3,"endColumn":17},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'className', 'showPanel', and 'stats'. Either include them or remove the dependency array.","ArrayExpression",["142"],"'forwardRef' is defined but never used.","'PlayerModel' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'moveFieldByKey'. Either include it or remove the dependency array.",["143"],["140"],["141"],"'Tree03' is defined but never used.","'crouch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'api.position' and 'api.velocity'. Either include them or remove the dependency array.",["144"],"'useFrame' is defined but never used.","'useEffect' is defined but never used.","'useThree' is defined but never used.","'Grass02' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [className, parent, showPanel, stats]",{"range":"151","text":"152"},"Update the dependencies array to be: [moveFieldByKey]",{"range":"153","text":"154"},"Update the dependencies array to be: [api.position, api.velocity]",{"range":"155","text":"156"},[680,688],"[className, parent, showPanel, stats]",[1037,1039],"[moveFieldByKey]",[2000,2002],"[api.position, api.velocity]"]