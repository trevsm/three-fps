/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: nenjo (https://sketchfab.com/nenjo)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/models/b68f79aee62f4e849be265c903f724f5
title: Spruce Tree - Low Poly
*/

import React, { useRef, Suspense } from 'react'
import { useGLTF } from '@react-three/drei/useGLTF'
import { useBox } from 'use-cannon'

export default function Tree02(props) {
  const visibleHitBox = useRef(false)

  const [ref ] = useBox(() => ({
    mass: 0,
    args: [1.5 , 20, 1.5],
    ...props,
  }))

  const { nodes, materials } = useGLTF('/models/trees/tree02/scene.gltf')
  return (
    <mesh ref={ref} scale={props.scale} dispose={null}>
      {visibleHitBox.current ? (
        <>
          <boxBufferGeometry
            attach="geometry"
            args={[
              1.5 / props.scale[0],
              20 / props.scale[1],
              1.5 / props.scale[2],
            ]}
          />
          <meshLambertMaterial color="red" opacity={.7} transparent/>
        </>
      ) : null}

      <Suspense fallback={null}>
        <group rotation={[-Math.PI / 2, 0, 0]}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <group rotation={[-1.14, -0.18, 2.73]} scale={[100, 100, 100]}>
              <group rotation={[Math.PI / 2, 0, 0]} />
            </group>
            <group rotation={[-3.02, 0.02, -0.82]} scale={[100, 100, 100]}>
              <group rotation={[Math.PI / 2, 0, 0]} />
            </group>
            <group
              position={[0, -49.71, 0]}
              rotation={[-Math.PI / 2, 0, 0]}
              scale={[100, 100, 100]}
            >
              <mesh
              castShadow receiveShadow
                material={materials['tree-spruce']}
                geometry={nodes['tree_tree-spruce_0'].geometry}
              />
            </group>
            <group
              position={[748.11, 534.37, 650.76]}
              rotation={[3.13, 0.76, 2.69]}
              scale={[100, 100, 100]}
            />
          </group>
        </group>
      </Suspense>
    </mesh>
  )
}

useGLTF.preload('/models/trees/tree02/scene.gltf')
